apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "order-management.fullname" . }}
  labels:
    {{- include "order-management.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "order-management.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "order-management.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: DATABASE_URL
              value: postgres://{{ .Values.database.user }}:$(DB_PASSWORD)@{{ .Values.database.host }}:{{ .Values.database.port }}/{{ .Values.database.name }}
            - name: KAFKA_BOOTSTRAP_SERVERS
              value: {{ .Values.kafka.bootstrapServers }}
            - name: KAFKA_TOPIC
              value: {{ .Values.kafka.topic }}
            - name: KEYCLOAK_URL
              value: {{ .Values.keycloak.url }}
            - name: KEYCLOAK_REALM
              value: {{ .Values.keycloak.realm }}
            - name: KEYCLOAK_CLIENT_ID
              value: {{ .Values.keycloak.clientId }}
            - name: KEYCLOAK_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.keycloak.secretName }}
                  key: clientSecret
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secretName }}
                  key: password
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
